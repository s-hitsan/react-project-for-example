{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","active","to","id","name","Message","message","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","dialogsItems","initialValues","onSubmit","values","sendMessage","validate","textareaValidator","component","Textarea","type","compose","connect","dispatch","newMessageBody","sendMessageCreator","withAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,4B,oBCA7GD,EAAOC,QAAU,CAAC,OAAS,6B,mJCSZC,EANI,SAACC,GAClB,OAAO,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACL,cAAC,IAAD,CAASC,GAAI,UAAYL,EAAMM,GAA/B,SAAoCN,EAAMO,U,kBCE/BC,EALC,SAACR,GACf,OAAO,qBAAKC,UAAWC,IAAEO,QAAlB,SAA4BT,EAAMS,W,wBC6C5BC,EAxCC,SAACV,GAEf,IAAIW,EAAQX,EAAMY,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYT,KAAMS,EAAET,KAAiBD,GAAIU,EAAEV,IAAZU,EAAEV,OAC1EW,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASV,QAASU,EAAEV,SAAcU,EAAEb,OAGnF,OAAKN,EAAMoB,OAGT,sBAAKnB,UAAWC,IAAEY,QAAlB,UACE,qBAAKb,UAAWC,IAAEmB,aAAlB,SACGR,IAEH,sBAAKZ,UAAWC,IAAEgB,SAAlB,UACE,8BACGD,IAEH,8BACE,cAAC,IAAD,CACEK,cAAe,CAAEb,QAAS,IAC1Bc,SAAU,SAACC,GACTxB,EAAMyB,YAAYD,EAAOf,UAH7B,SAKG,kBACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiB,SAAUC,YAAkB,IAAKC,UAAWC,IAAUtB,KAAM,YACnE,wBAAQuB,KAAK,SAAb,gCApBY,cAAC,IAAD,CAAUzB,GAAI,Y,gBCM1C0B,sBACEC,aAhBoB,SAACrB,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAIE,SAACqB,GACxB,MAAO,CACLR,YAAa,SAACS,GACZD,EAASE,YAAmBD,SAQhCE,IAFFL,CAGErB","file":"static/js/4.f8eea45f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1YAJQ\",\"dialogsItems\":\"Dialogs_dialogsItems__3-mRg\",\"messages\":\"Dialogs_messages__2KxqG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"DialogItem_active__XaRvc\"};","import React from 'react'\r\nimport s from './DialogItem.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst DialogItem = (props) => {\r\n  return <div className={s.dialog + ' ' + s.active}>\r\n    <NavLink to={/dialogs/ + props.id}>{props.name}</NavLink>\r\n  </div>\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\n\r\nexport default Message","import s from './Dialogs.module.css'\r\nimport { NavLink, Redirect } from 'react-router-dom'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport { textareaValidator } from '../../utils/validators'\r\nimport { Textarea } from '../common/FormsControls/FormsControls'\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage\r\n\r\n  let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />)\r\n  let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />)\r\n\r\n\r\n  if (!props.isAuth) return <Redirect to={'/login'} />\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div>\r\n          {messagesElements}\r\n        </div>\r\n        <div>\r\n          <Formik\r\n            initialValues={{ message: \"\", }}\r\n            onSubmit={(values) => {\r\n              props.sendMessage(values.message)\r\n            }}>\r\n            {() => (\r\n              <Form>\r\n                <Field validate={textareaValidator(40)} component={Textarea} name={'message'} />\r\n                <button type=\"submit\">Send</button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs","import { connect } from 'react-redux';\r\nimport { sendMessageCreator} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { withAuthRedirect } from './../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody))\r\n    }\r\n  }\r\n}\r\n\r\nexport default \r\ncompose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}